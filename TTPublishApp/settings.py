# -*- coding:utf8 -*-
"""
Django settings for TTPublishApp project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

from TTPublishApp.config import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2kpeanl_l@*1-cOIB@&6i(w8)54svrw)%o3#2n*p6kw2gs-m0*'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

APPEND_SLASH = True

ALLOWED_HOSTS = ['*']

# Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework',
#     'oauth2_provider',
#     'users',
#     'clothes',
#     'setup',
#
#     'rest_framework_swagger',
# ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'horizon.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'TTPublishApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TTPublishApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'fairy_mirror_bz',
#         'USER': 'fairy_mirror_test',
#         'PASSWORD': 'Con!082%Trib*HLie810283*(#2Exdwd3eifqonfI)*&#@C',
#         'HOST': '127.0.0.1',
#         'PORT': 3306,
#         'OPTIONS': {'charset': 'utf8mb4'},
#     },
#     'consumer': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'fairy_mirror_cs',
#         'USER': 'fairy_mirror_test',
#         'PASSWORD': 'Con!082%Trib*HLie810283*(#2Exdwd3eifqonfI)*&#@C',
#         'HOST': '127.0.0.1',
#         'PORT': 3306,
#     },
#     'admin': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'fairy_mirror_ad',
#         'USER': 'fairy_mirror_test',
#         'PASSWORD': 'Con!082%Trib*HLie810283*(#2Exdwd3eifqonfI)*&#@C',
#         'HOST': '127.0.0.1',
#         'PORT': 3306,
#     },
# }


DATABASE_ROUTERS = ['TTPublishApp.router.TTPublishAppRouter']

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


AUTH_USER_MODEL = 'users.BusinessUser'

AUTHENTICATION_BACKENDS = (
    # 'django.contrib.auth.backends.ModelBackend',
    'users.auth.BusinessUserBackend',
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = (
    ("picture", os.path.join(STATIC_ROOT, 'picture')),
)

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope',
               'write': 'Write scope',
               'groups': 'Access to your groups'},
    'ACCESS_TOKEN_EXPIRE_SECONDS': 60 * 60 * 24,
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        # 'rest_framework.permissions.IsAuthenticated',
        'horizon.permission.DjangoAPIPermissionOrAnonReadOnly',
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': (
        # python 2
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
        # # python 3
        # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ),
}

# pagination

PAGE_SIZE = 100

MAX_PAGE_SIZE = 500

# domain name
if ENVIRONMENT == 10:     # 开发环境
    DOMAIN_NAME = 'fairy.cmcm.com'
elif ENVIRONMENT == 20:   # 测试环境
    DOMAIN_NAME = 'fairy.cmcm.com'
elif ENVIRONMENT == 30:   # 生成环境
    DOMAIN_NAME = 'fairy.cmcm.com'
else:
    DOMAIN_NAME = 'fairy.cmcm.com'

# WEB URL FIX

WEB_URL_FIX = os.path.join('https://', DOMAIN_NAME)

MEDIA_ROOT = '/data/app/static/'

# 图片根目录
BUSINESS_PICTURE_ROOT = os.path.join('/data/app', 'static', 'business', 'picture')
CONSUMER_PICTURE_ROOT = os.path.join('/data/app', 'static', 'consumer', 'picture')

PICTURE_DIRS = {
    'consumer': {
        'head_picture': os.path.join('consumer', 'head_picture'),   # 用户头像图片目录
        'qrcode': os.path.join('consumer', 'qrcode'),               # 二维码图片目录
        'clothes': os.path.join('consumer', 'clothes'),             # 服装图片目录
        'logo': os.path.join('consumer', 'logo'),                   # logo目录
    },
    'business': {
        'clothes': os.path.join('business', 'clothes'),               # 服装图片目录
        'head_picture': os.path.join('business', 'head_picture'),     # 用户头像图片目录
        'qrcode': os.path.join('business', 'qrcode'),                 # 二维码图片目录
        'advert': os.path.join('business', 'advert'),                 # 轮播广告图片目录
        'mall': os.path.join('business', 'mall'),                     # 购物中心平面图目录
        'logo': os.path.join('business', 'logo'),                     # logo目录
    },
    'android': {
        'android': 'android',                                         # android apk目录
    }
}

# # # 缓存服务器配置
# REDIS_SETTINGS = {
#     'host': '127.0.0.1',
#     'port': 6379,
#     'db_set': {
#         'business': 0,
#         'consumer': 1,
#         }
# }

# 默认文件存储器
DEFAULT_FILE_STORAGE = 'horizon.storage.MMFileSystemStorage'

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'petstore_auth': {
            'type': 'oauth2',
            'description': 'test',
            'flow': "password",
            "tokenUrl": "http://140.143.142.96:8333/auth/login/",
            "scopes": {
                "read": "read scode",
                "write": "write scode"
            }
        }
    },
    "SHOW_REQUEST_HEADERS": True,
    "SECURITY": [{
         "password": ["read", "write"]
    }]
}

FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024
